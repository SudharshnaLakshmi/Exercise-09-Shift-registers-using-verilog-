// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "06/09/2022 16:05:13"

// 
// Device: Altera EP3C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module piso (
	Clk,
	Parallel_In,
	load,
	Serial_Out);
input 	Clk;
input 	[3:0] Parallel_In;
input 	load;
output 	Serial_Out;

// Design Ports Information
// Serial_Out	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// load	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Parallel_In[3]	=>  Location: PIN_P1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Parallel_In[2]	=>  Location: PIN_R3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Parallel_In[1]	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Parallel_In[0]	=>  Location: PIN_T3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Serial_Out~output_o ;
wire \Clk~input_o ;
wire \Clk~inputclkctrl_outclk ;
wire \load~input_o ;
wire \Parallel_In[3]~input_o ;
wire \Parallel_In[2]~input_o ;
wire \Parallel_In[1]~input_o ;
wire \Parallel_In[0]~input_o ;
wire \tmp~3_combout ;
wire \tmp~2_combout ;
wire \tmp~1_combout ;
wire \tmp~0_combout ;
wire \Serial_Out~0_combout ;
wire \Serial_Out~reg0_q ;
wire [3:0] tmp;


// Location: IOOBUF_X1_Y0_N16
cycloneiii_io_obuf \Serial_Out~output (
	.i(\Serial_Out~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Serial_Out~output_o ),
	.obar());
// synopsys translate_off
defparam \Serial_Out~output .bus_hold = "false";
defparam \Serial_Out~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneiii_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \Clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk~inputclkctrl .clock_type = "global clock";
defparam \Clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N22
cycloneiii_io_ibuf \load~input (
	.i(load),
	.ibar(gnd),
	.o(\load~input_o ));
// synopsys translate_off
defparam \load~input .bus_hold = "false";
defparam \load~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N22
cycloneiii_io_ibuf \Parallel_In[3]~input (
	.i(Parallel_In[3]),
	.ibar(gnd),
	.o(\Parallel_In[3]~input_o ));
// synopsys translate_off
defparam \Parallel_In[3]~input .bus_hold = "false";
defparam \Parallel_In[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N8
cycloneiii_io_ibuf \Parallel_In[2]~input (
	.i(Parallel_In[2]),
	.ibar(gnd),
	.o(\Parallel_In[2]~input_o ));
// synopsys translate_off
defparam \Parallel_In[2]~input .bus_hold = "false";
defparam \Parallel_In[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N15
cycloneiii_io_ibuf \Parallel_In[1]~input (
	.i(Parallel_In[1]),
	.ibar(gnd),
	.o(\Parallel_In[1]~input_o ));
// synopsys translate_off
defparam \Parallel_In[1]~input .bus_hold = "false";
defparam \Parallel_In[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N1
cycloneiii_io_ibuf \Parallel_In[0]~input (
	.i(Parallel_In[0]),
	.ibar(gnd),
	.o(\Parallel_In[0]~input_o ));
// synopsys translate_off
defparam \Parallel_In[0]~input .bus_hold = "false";
defparam \Parallel_In[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N12
cycloneiii_lcell_comb \tmp~3 (
// Equation(s):
// \tmp~3_combout  = (\load~input_o  & \Parallel_In[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\load~input_o ),
	.datad(\Parallel_In[0]~input_o ),
	.cin(gnd),
	.combout(\tmp~3_combout ),
	.cout());
// synopsys translate_off
defparam \tmp~3 .lut_mask = 16'hF000;
defparam \tmp~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N13
dffeas \tmp[0] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\tmp~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(tmp[0]),
	.prn(vcc));
// synopsys translate_off
defparam \tmp[0] .is_wysiwyg = "true";
defparam \tmp[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneiii_lcell_comb \tmp~2 (
// Equation(s):
// \tmp~2_combout  = (\load~input_o  & (\Parallel_In[1]~input_o )) # (!\load~input_o  & ((tmp[0])))

	.dataa(\Parallel_In[1]~input_o ),
	.datab(gnd),
	.datac(\load~input_o ),
	.datad(tmp[0]),
	.cin(gnd),
	.combout(\tmp~2_combout ),
	.cout());
// synopsys translate_off
defparam \tmp~2 .lut_mask = 16'hAFA0;
defparam \tmp~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N11
dffeas \tmp[1] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\tmp~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(tmp[1]),
	.prn(vcc));
// synopsys translate_off
defparam \tmp[1] .is_wysiwyg = "true";
defparam \tmp[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N0
cycloneiii_lcell_comb \tmp~1 (
// Equation(s):
// \tmp~1_combout  = (\load~input_o  & (\Parallel_In[2]~input_o )) # (!\load~input_o  & ((tmp[1])))

	.dataa(\Parallel_In[2]~input_o ),
	.datab(gnd),
	.datac(\load~input_o ),
	.datad(tmp[1]),
	.cin(gnd),
	.combout(\tmp~1_combout ),
	.cout());
// synopsys translate_off
defparam \tmp~1 .lut_mask = 16'hAFA0;
defparam \tmp~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N1
dffeas \tmp[2] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\tmp~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(tmp[2]),
	.prn(vcc));
// synopsys translate_off
defparam \tmp[2] .is_wysiwyg = "true";
defparam \tmp[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N2
cycloneiii_lcell_comb \tmp~0 (
// Equation(s):
// \tmp~0_combout  = (\load~input_o  & (\Parallel_In[3]~input_o )) # (!\load~input_o  & ((tmp[2])))

	.dataa(\Parallel_In[3]~input_o ),
	.datab(gnd),
	.datac(\load~input_o ),
	.datad(tmp[2]),
	.cin(gnd),
	.combout(\tmp~0_combout ),
	.cout());
// synopsys translate_off
defparam \tmp~0 .lut_mask = 16'hAFA0;
defparam \tmp~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N3
dffeas \tmp[3] (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\tmp~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(tmp[3]),
	.prn(vcc));
// synopsys translate_off
defparam \tmp[3] .is_wysiwyg = "true";
defparam \tmp[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N20
cycloneiii_lcell_comb \Serial_Out~0 (
// Equation(s):
// \Serial_Out~0_combout  = (\load~input_o  & (\Serial_Out~reg0_q )) # (!\load~input_o  & ((tmp[3])))

	.dataa(gnd),
	.datab(\load~input_o ),
	.datac(\Serial_Out~reg0_q ),
	.datad(tmp[3]),
	.cin(gnd),
	.combout(\Serial_Out~0_combout ),
	.cout());
// synopsys translate_off
defparam \Serial_Out~0 .lut_mask = 16'hF3C0;
defparam \Serial_Out~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N21
dffeas \Serial_Out~reg0 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Serial_Out~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Serial_Out~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Serial_Out~reg0 .is_wysiwyg = "true";
defparam \Serial_Out~reg0 .power_up = "low";
// synopsys translate_on

assign Serial_Out = \Serial_Out~output_o ;

endmodule
